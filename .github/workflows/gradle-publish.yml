name: CI/CD using github actions & docker


on:
  push:
    branches: [ "develop" ] # 해당 branch에 푸쉬 발생 시 업데이트

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: set yml file
      uses: microsoft/variable-substitution@v1
      with:
        files: src/main/resources/application.yml
      env:
        spring.datasource.url: ${{ secrets.DB_URL }}
        spring.datasource.username: ${{ secrets.DB_USERNAME }}
        spring.datasource.password: ${{ secrets.DB_PASSWORD }}
        jwt.secret: ${{ secrets.JWT_SECRET }}
        spring.ai.openai.api-key: ${{ secrets.OPENAI_API_KEY }}

    - name: set chmod
      run: chmod +x ./gradlew
        
    - name: Build with Gradle
      run: ./gradlew bootJar

    - name: Docker build & push to prod
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/cheong_for_do:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/cheong_for_do:latest

    - name: Deploy to prod
      uses: appleboy/ssh-action@master
      id: deploy-prod
      with:
        host: ${{ secrets.HOST_PROD }} # EC2 퍼블릭 IPv4 DNS
        username: ubuntu
        key: ${{ secrets.PRIVATE_KEY }} # EC2 private key
        envs: GITHUB_SHA
        script: |
          docker stop cheong_for_do
          docker rm cheong_for_do
          docker rmi ${{ secrets.DOCKER_USERNAME }}/cheong_for_do:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/cheong_for_do:latest
          docker run -d -p 443:8080 --name cheong_for_do ${{ secrets.DOCKER_USERNAME }}/cheong_for_do:latest
